import { motion } from "framer-motion";
import { TrendingUp, TrendingDown } from "lucide-react";
import { ReactNode } from "react";
import { cn } from "@/lib/utils";

interface StatsCardProps {
  icon: ReactNode;
  title: string;
  value: number;
  unit: string;
  trend: string;
  trendUp: boolean | null;
  colorClass: string;
  className?: string;
}

const StatsCard = ({
  icon,
  title,
  value,
  unit,
  trend,
  trendUp,
  colorClass,
  className
}: StatsCardProps) => {
  return (
    <motion.div
      whileHover={{ y: -5, scale: 1.02 }}
      whileTap={{ scale: 0.98 }}
      className={cn(
        "glass-card rounded-2xl p-6 border border-white/10 relative overflow-hidden hover:shadow-lg transition-all duration-300 group",
        className
      )}
    >
      {/* Background gradient */}
      <div className={`absolute -top-10 -right-10 h-40 w-40 rounded-full bg-gradient-to-br ${colorClass} blur-3xl opacity-30 group-hover:opacity-40 transition-opacity duration-300`} />
      
      {/* Highlight effect */}
      <div className="absolute inset-0 bg-gradient-to-t from-white/5 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
      
      <div className="relative z-10">
        <div className="flex items-center justify-between mb-4">
          <div className="p-2 rounded-lg bg-white/5 border border-white/10">
            {icon}
          </div>
          
          <motion.div
            animate={{ rotate: [0, 5, 0] }}
            transition={{ duration: 6, repeat: Infinity, ease: "easeInOut" }}
            className="h-16 w-16 rounded-full bg-gradient-to-br opacity-10 absolute top-0 right-0"
          />
        </div>
        
        <h3 className="text-white/70 text-sm font-medium mb-1">{title}</h3>
        
        <div className="flex items-end gap-1">
          <span className="text-white text-3xl font-display font-bold">{value}</span>
          <span className="text-white/70 text-lg mb-1">{unit}</span>
        </div>
        
        <div className="flex items-center gap-1 mt-2">
          {trendUp !== null && (
            trendUp ? (
              <TrendingUp className="h-3 w-3 text-emerald-400" />
            ) : (
              <TrendingDown className="h-3 w-3 text-rose-400" />
            )
          )}
          <span className={`text-xs ${trendUp ? 'text-emerald-400' : trendUp === false ? 'text-rose-400' : 'text-white/60'}`}>
            {trend}
          </span>
        </div>
      </div>
    </motion.div>
  );
};

export default StatsCard;
